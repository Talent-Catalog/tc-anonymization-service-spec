type: object
description: The candidate's language proficiency.
properties:
  language:
    description: The language that the candidate is proficient in.
    allOf:
      - $ref: ./Language.yaml
  writtenLevel:
    description: The candidate's written proficiency in this language.
    allOf:
      - $ref: ./LanguageLevel.yaml # todo confirm the names in this enum - and is there a standard for this?
  #      todo jc I am not sure but I don't think that there is a standard for this
  # todo sm for example CEFR uses a scale A1, A2, B1, B2, C1, C2 which loosely maps to:
  # todo sm Beginner, Elementary, Intermediate, Upper Intermediate, Advanced, Mastery/Native-like; or, using our names:
  # todo sm A1+A2: Elementary Proficiency, B1+B2: Intermediate Proficiency, C1: Full Professional Proficiency, C2: Native or Bilingual Proficiency
#  todo sm+jc: agreed - add cefr levels to database:
  #  todo No Proficiency: null
#  todo [Beginner: A1] - add this?
#  todo elementary proficiency: A2
  #  todo Intermediate proficiency: B1
  #  todo [Upper Intermediate: B2] - add this?
#  todo Full Professional Proficiency: C1
#  todo Native or Bilingual Proficiency C2
  #  todo sm+jc: agreed - open a ticket to add the above cefr levels to the DB and enums
#  todo sm+jc: agreed - open a ticket for later that updates a candidate's self reported langauge levels in accordance with any exams they take that increases their level
  spokenLevel:
    description: The candidate's spoken proficiency in this language.
    allOf:
      - $ref: ./LanguageLevel.yaml # todo as above
    #      todo jc as above
    # todo sm as above
    #  todo sm+jc: agreed - as above.
  migrationLanguage: # todo confirm the semantics and relevance of this field
    #    todo jc Not sure but I think that "migration" here refers to migration of data from the old (2019) database.
    #    todo jc If so, I would be inclined to leave it out
    # todo sm Ok - in prod we have 274 instances of values in this field where the corresponding language is "Unknown"
    # todo sm I think migrationLanguage can be removed from the API and the corresponding language_id correctly mapped as far as possible
#    todo sm+jc: agreed - open a ticket to update the data + then remove the migrationLanguage column+field
    type: string
    description: The migration language for this candidate.
    example: "Urdu"
