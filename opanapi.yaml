openapi: 3.0.3
info:
  title: Anonymised Candidate Data API
  description: Talent Catalog API specification for accessing anonymised candidate data.
  version: 1.0.0
servers:
  - url: https://tctalent.org/ads/v1
    description: Production server
  - url: https://tctalent-test.org/ads/v1
    description: Staging server

paths:
  /candidates:
    get:
      summary: Retrieve a list of anonymised candidates
      description: Fetches a list of anonymised candidates. Can be paginated if needed.
      operationId: getAllCandidates
      parameters:
        - name: page
          in: query
          description: The page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: The number of results per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: An array of anonymised candidates
          content:
            application/json:
              schema:
                $ref: './components/schemas/CandidateArray.yaml'
              example:
                - id: "123e4567-e89b-12d3-a456-426614174000"
                  skills: [ "Java", "Python", "AWS" ]
                  experience: 5.5
                  lastUpdated: "2023-08-01T14:30:00Z"
                - id: "123e4567-e89b-12d3-a456-426614174001"
                  skills: [ "React", "Node.js", "TypeScript" ]
                  experience: 3.0
                  lastUpdated: "2023-07-25T10:15:00Z"
        '400':
          description: Bad request - Invalid pagination parameters
        '401':
          description: Unauthorised - Access token is missing or invalid
        '500':
          description: Internal server error

  /candidates/{candidateId}:
    get:
      summary: Retrieve an anonymised candidate by candidate ID
      description: Fetches details of an anonymised candidate by their unique candidate ID.
      operationId: getCandidateById
      parameters:
        - name: candidateId
          in: path
          required: true
          description: Unique ID of the candidate to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An anonymised candidate's details
          content:
            application/json:
              schema:
                $ref: './components/schemas/Candidate.yaml'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
# Or Google IDs, SF IDs? e.g. id: 1vSydTfSK3pXUxl8GF6AURP3KrLx8d5WoT-_ZSGDR4T4
                skills: ["Java", "Python", "AWS"]
                experience: 5.5
                lastUpdated: "2023-08-01T14:30:00Z"
        '404':
          description: Not found - Candidate not found
        '400':
          description: Bad request - Invalid candidate ID
        '500':
          description: Internal server error

  /candidates/byListId/{listId}:
    get:
      summary: Retrieve candidates by list ID
      description: Fetches a selection of candidates associated with a specific list ID.
      operationId: getCandidatesByListId
      parameters:
        - name: listId
          in: path
          required: true
          description: A unique list identifier for retrieving candidates associated with a specific list.
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: The page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: The number of results per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: An array of anonymised candidates associated with the specified list ID
          content:
            application/json:
              schema:
                $ref: './components/schemas/CandidateArray.yaml'
              example:
                - id: "123e4567-e89b-12d3-a456-426614174000"
                  skills: [ "Java", "Python", "AWS" ]
                  experience: 5.5
                  lastUpdated: "2023-08-01T14:30:00Z"
                - id: "123e4567-e89b-12d3-a456-426614174001"
                  skills: [ "React", "Node.js", "TypeScript" ]
                  experience: 3.0
                  lastUpdated: "2023-07-25T10:15:00Z"
        '404':
          description: Not found - No candidates found for the given list ID
        '400':
          description: Bad request - Invalid list ID or pagination parameters
        '500':
          description: Internal server error

  /candidates/bySearchId/{searchId}:
    get:
      summary: Retrieve candidates by search ID
      description: Fetches a selection of candidates associated with a specific search ID.
      operationId: getCandidatesBySearchId
      parameters:
        - name: searchId
          in: path
          required: true
          description: A unique search identifier for retrieving candidates associated with a specific search.
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: The page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: The number of results per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: An array of anonymised candidates associated with the specified search ID
          content:
            application/json:
              schema:
                $ref: './components/schemas/CandidateArray.yaml'
              example:
                - id: "123e4567-e89b-12d3-a456-426614174000"
                  skills: [ "Java", "Python", "AWS" ]
                  experience: 5.5
                  lastUpdated: "2023-08-01T14:30:00Z"
                - id: "123e4567-e89b-12d3-a456-426614174001"
                  skills: [ "React", "Node.js", "TypeScript" ]
                  experience: 3.0
                  lastUpdated: "2023-07-25T10:15:00Z"
        '404':
          description: Not found - No candidates found for the given search ID
        '400':
          description: Bad request - Invalid search ID or pagination parameters
        '500':
          description: Internal server error
